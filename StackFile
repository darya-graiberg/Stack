class Stack {
    private int maxSize;
    private int top;
    private int[] stackArray;

    public Stack(int size) {    // задает размер стека
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1;
    }

    public boolean isEmpty() {    // проверяет, пуст ли стек
        return (top == -1);
    }

    public boolean isFull() {    // проверяет, заполнен ли стек
        return (top == maxSize - 1);
    }

    public void push(int value) {    // добавляет элемент в стек
        if (isFull()) {
            System.out.println("Стек переполнен");
            return;
        }
        stackArray[++top] = value;
    }

    public int pop() {    // удаляет и возвращает верхний элемент из стека
        if (isEmpty()) {
            System.out.println("Стек пуст");
            return -1;
        }
        return stackArray[top--];
    }

    public int peek() {    // возвращает верхний элемент без его удаления
        if (isEmpty()) {
            System.out.println("Стек пуст");
            return -1;
        }
        return stackArray[top];
    }

    public int size() {    // возвращает текущий размер стека
        return top + 1;
    }
}

public class Main {
    public static void main(String[] args) {
        Stack stack = new Stack(3);    //размер 3
        // добавляем 4 элемента
        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.push(4);    // выводит "Стек переполнен"

        System.out.println(stack.pop());     // выводит 3

        System.out.println(stack.peek());    // выводит 2

        System.out.println(stack.size());    // выводит 2
    }
}
}
